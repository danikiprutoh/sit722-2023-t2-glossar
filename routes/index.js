const express = require('express');
const router = express.Router();

const glossaryData = [
  { term: 'Node.js', description: 'Server-side JavaScript runtime environment.', reference: 'Halvorsen, H.-P. (2020). Software Development A Practical Approach! https://halvorsen.blog. https://halvorsen.blog. Retrieved July 23, 2020, from https://www.halvorsen.blog/documents/programming/software_engineering/resources/Software%20Development.pdf. ' },
  { term: 'Express', description: 'Provides a robust set of features for web and mobile applications..', reference: 'Node.js - Express Framework - Tutorialspoint. (2019). Tutorialspoint.com. https://www.tutorialspoint.com/nodejs/nodejs_express_framework.htm' },
  { term: 'EJS (Embedded JavaScript)', description: 'Templating language for dynamic HTML generation..', reference: 'Olusola, S. (2021, December 24). How to use EJS to template your Node.js application. LogRocket Blog. https://blog.logrocket.com/how-to-use-ejs-template-node-js-application/' },
  { term: 'GitHub', description: 'A web-based version control and collaboration platform for software developers..', reference: 'Jackson, B. (2018, April 20). What Is GitHub? A Beginnerâ€™s Introduction to... Kinsta Managed WordPress Hosting; Kinsta Managed WordPress Hosting. https://kinsta.com/knowledgebase/what-is-github/' },
  { term: 'Repository', description: 'Storage location for code and related files in a software project..', reference: 'sagar, H. (2023, June 7). Repository Pattern Set Up in Node.Js with Prisma. Medium. https://javascript.plainenglish.io/repository-pattern-set-up-in-node-js-with-prisma-7a39d5867477#:~:text=In%20this%20pattern%2C%20a%20repository' },
  { term: 'Web Server', description: 'Computer program that displays web pages and content to users..', reference: 'What Is a Web Server and How Does It Work? - IT Glossary | SolarWinds. (n.d.). Www.solarwinds.com. https://www.solarwinds.com/resources/it-glossary/web-server' },
  { term: 'Visual Studio Code', description: 'A streamlined code editor with support for development operations like debugging, task running, and version control.', reference: 'Wikipedia Contributors. (2019, March 21). Visual Studio Code. Wikipedia; Wikimedia Foundation. https://en.wikipedia.org/wiki/Visual_Studio_Code' },
  { term: 'HTTP', description: 'Underlying protocol for web browsers and servers communication..', reference: 'Chai, W., & Ferguson, K. (2021, March). What is HTTP and how does it work? Hypertext Transfer Protocol Definition. WhatIs.com. https://www.techtarget.com/whatis/definition/HTTP-Hypertext-Transfer-Protocol' },
  { term: 'Azure', description: 'Provides a broad range of cloud services.', reference: 'Wikipedia Contributors. (2019, October 12). Microsoft Azure. Wikipedia; Wikimedia Foundation. https://en.wikipedia.org/wiki/Microsoft_Azure' },
  { term: 'Containers', description: 'provide an easy way to run batch jobs without having to manage an environment and dependencies.', reference: 'Davis, A. 2021, Bootstrapping Microservices with Docker, Kubernetes, and Terraform / Davis, Ashley, Manning Publications viewed 11 July 2022, <https://discovery.ebsco.com/linkprocessor/plink?id=db0e7980-bdfb-3d3b-b4e9-127c44a7aebb' },
  { term: 'Dockerfile.', description: 'A script containing a set of instructions used by Docker to automatically build a container image.', reference: '(2019, August 8). Docker Documentation. https://docs.docker.com/engine/reference/builder/' },
  { term: 'Kubernetes.', description: 'An open-source container orchestration platform designed to automate deploying, scaling, and managing containerized applications.', reference: 'What is Kubernetes? | Microsoft Azure. (n.d.). Azure.microsoft.com. Retrieved August 13, 2023, from https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-kubernetes/' },
  { term: 'CI/CD Pipeline.', description: 'This is a DevOps practice where code changes are automatically integrated, tested, and deployed to production with minimal human intervention.', reference: 'What is a CI/CD pipeline? (2022, May 11). Www.redhat.com. https://www.redhat.com/en/topics/devops/what-cicd-pipeline' },
  { term: 'Terraform.', description: 'An open-source infrastructure-as-code tool that allows developers to define and provision infrastructure using a declarative configuration language.', reference: 'Terraform in 100 Seconds. (n.d.). Www.youtube.com. https://www.youtube.com/watch?v=tomUWcQ0P3k' },
  { term: 'Immutable Infrastructure.', description: 'An approach where once a component is deployed, it is never modified, but replaced with a new instance when an update is needed.', reference: 'What is immutable infrastructure? - Definition from WhatIs.com. (n.d.). SearchITOperations. https://www.techtarget.com/searchitoperations/definition/immutable-infrastructure#:~:text=Immutable%20infrastructure%20is%20an%20approach' },
  { term: 'Microservices.', description: 'An architectural style that structures an application as a collection of loosely coupled, independently deployable services.', reference: 'cloud. (2021, November 15). DevOps and Microservices: Impact on Enterprise Applications. Successive Cloud. https://successive.cloud/devops-microservices-impact-on-enterprise-applications/#:~:text=The%20combination%20of%20DevOps%20and' },
  { term: 'Repository.', description: 'It is a centralized storage location where code is kept and maintained. Common repository platforms include GitHub.', reference: 'Azure DevOps Repository - javatpoint. (n.d.). Www.javatpoint.com. Retrieved August 13, 2023, from https://www.javatpoint.com/azure-devops-repository#:~:text=Repository%3A%20A%20repository%20is%20a' },
  { term: 'Container Orchestration.', description: 'It refers to the automated arrangement, coordination, and management of software containers. Tools like Kubernetes and Docker Swarm popular orchestration platforms.', reference: 'Velimirovic, A. (2022, September 21). What is Container Orchestration? Benefits & How It Works. PhoenixNAP Blog. https://phoenixnap.com/blog/what-is-container-orchestration#:~:text=Container%20orchestration%20is%20the%20strategy' },
  { term: 'Software as a Service(SaaS)', description: 'SaaS delivers software applications over the internet on a subscription basis. ', reference: 'DevOps for SaaS Projects in 2023: When You Need It and How to Implement It. (2023, January 16). Relevant Software. https://relevant.software/blog/devops-for-saas-projects/' },
  { term: 'Platform as a Sevice(PaaS)', description: 'A cloud computing service that provides a platform for developers to build, deploy, and manage applications without the complexity of building and maintaining the underlying infrastructure.', reference: 'Atlassian. (n.d.). Platform as a Service. Atlassian. https://www.atlassian.com/microservices/cloud-computing/platform-as-a-service' },
  // Docker
  { term: 'Dockerhub.', description: 'A cloud-based repository where Docker users and partners can create, test, store, and distribute container images.', reference: 'Srivastav, P. (n.d.). Docker for Beginners. A Docker Tutorial for Beginners. https://docker-curriculum.com/ ' },
  { term: 'Docker Compose.', description: 'A tool for defining and running multi-container Docker applications. It uses a docker-compose.yml file to configure application services.', reference: 'Linode. (2023, March 9). How to use Docker compose. Linode Guides &amp; Tutorials. https://www.linode.com/docs/guides/how-to-use-docker-compose/ ' },
  { term: 'Docker Swarm.', description: 'Native clustering for Docker which allows you to turn a group of Docker nodes into a single, virtual Docker host.', reference: 'Casey, K. (2016, August 1). What is Docker Swarm?: Definition from TechTarget. IT Operations. https://www.techtarget.com/searchitoperations/definition/Docker-Swarm ' },
  { term: 'Docker Engine.', description: 'The core component of Docker, responsible for building and running containers.', reference: 'Mell, E. (2023, June 5). What is Docker Engine?: Definition from TechTarget. IT Operations. https://www.techtarget.com/searchitoperations/definition/Docker-Engine ' },
  { term: 'Volume.', description: 'A mechanism for persisting data generated by and used by Docker containers. Volumes are completely managed by Docker.', reference: 'Volumes. Docker Documentation. (2023, August 22). https://docs.docker.com/storage/volumes/' },
  { term: 'Docker Daemon.', description: 'The background service running on the host that manages the building, running, and management of Docker containers.', reference: 'Everything you want to know about docker daemon. dockerlabs. (n.d.). https://dockerlabs.collabnix.com/beginners/components/daemon/ ' },
  { term: 'Docker CLI.', description: 'The tool that allows users to interact with Docker using commands like docker run, docker build and others.', reference: 'Use the Docker Command Line. Docker Documentation. (2023, May 23). https://docs.docker.com/engine/reference/commandline/cli/ ' },
  { term: 'Docker Registry.', description: 'A Docker registry is a system for storing and distributing Docker images with specific names.', reference: 'Configuring a registry. Docker Documentation. (2023a, May 23). https://docs.docker.com/registry/configuration/ ' },
  { term: 'dockerLayer', description: 'A set of file changes, or additions, used in Docker images and containers. Each command in a Dockerfile creates a new layer in the image.', reference: 'Walker, J. (2022, September 3). What are Docker image layers?. How. https://www.howtogeek.com/devops/what-are-docker-image-layers/ ' },
  { term: 'DockerImage', description: 'A lightweight, stand-alone, executable software package that includes everything needed to run a piece of software, including the code, runtime, system tools, libraries, and settings.', reference: 'Schmitt, J. (2022, May 23). Docker image vs container: What are the differences?. CircleCI. https://circleci.com/blog/docker-image-vs-container/ ' },
  // Terraform
  { term: 'HashiCorp Configuration Language.', description: 'The declarative language used to define infrastructure resources and associated configurations in Terraform configuration files.', reference: 'Configuration Language | Terraform | HashiCorp Developer. (n.d.). Configuration Language | Terraform | HashiCorp Developer. Retrieved September 7, 2023, from https://developer.hashicorp.com/terraform/tutorials/configuration-language' },
  { term: 'Infrastructure as Code.', description: 'A method of managing and provisioning infrastructure that relies on code, such as Terraform, for automation and consistency.', reference: 'Infrastructure as Code. (n.d.). Terraform by HashiCorp. https://www.terraform.io/use-cases/infrastructure-as-code' },
  { term: 'State File.', description: 'This is a terraform-managed JSON file containing the current status of the infrastructure, including resource properties and dependencies.', reference: 'Managing Terraform State - Best Practices & Examples. (n.d.). Spacelift. Retrieved September 7, 2023, from https://spacelift.io/blog/terraform-state#:~:text=The%20terraform%20state%20file%2C%20by' },
  { term: 'Terraform Plan.', description: 'Generates an output that explains the modifications Terraform will make to attain the target infrastructure state.', reference: 'Terraform Plan: Examples of How it Works | env0. (n.d.). Www.env0.com. Retrieved September 7, 2023, from https://www.env0.com/blog/terraform-plan' },
  { term: 'Apply.', description: 'The process of utilizing the terraform apply command to execute Terraform settings to create, update, or destroy infrastructure resources. ', reference: 'Apply Terraform configuration | Terraform | HashiCorp Developer. (n.d.). Apply Terraform Configuration | Terraform | HashiCorp Developer. Retrieved September 8, 2023, from https://developer.hashicorp.com/terraform/tutorials/cli/apply' },
  { term: 'Module.', description: 'Terraform code modules that are reusable and encapsulated and can define and manage complex infrastructure components.', reference: 'What Are Terraform Modules and How Do They Work? (2020, September 9). FreeCodeCamp.org. https://www.freecodecamp.org/news/terraform-modules-explained/' },
  { term: 'Variables.', description: 'Terraform configuration parameters that provide flexibility and reusability by taking values provided when the configuration is applied.', reference: 'Osman, M. (2023, July 12). Mastering Terraform Variables: A Comprehensive Guide for Defining and Utilizing Variable Types. Earthly Blog. https://earthly.dev/blog/terraform-variables-guide/' },
  { term: 'Output.', description: 'Terraform configuration values that can be exported for reference or consumption by other infrastructure components.', reference: 'Terraform Output Values : Complete Guide & Examples_terraform_weixin_0010034-CI/CD. (n.d.). Devpress.csdn.net. Retrieved September 8, 2023, from https://devpress.csdn.net/cicd/62ec861089d9027116a1127e.html' },
  { term: 'Remote state', description: 'Storing the Terraform state file in a remote place, which is frequently done for collaboration and enhanced state management in multi-user environments.', reference: 'The terraform_remote_state Data Source | Terraform | HashiCorp Developer. (n.d.). The Terraform_remote_state Data Source | Terraform | HashiCorp Developer. Retrieved September 8, 2023, from https://developer.hashicorp.com/terraform/language/state/remote-state-data' },
  { term: 'Data source', description: 'A method of retrieving information from external sources or existing infrastructure, which is used in Terraform settings to gather data before to building resources.', reference: 'How are data sources used in Terraform? (n.d.). Stack Overflow. Retrieved September 8, 2023, from https://stackoverflow.com/questions/47721602/how-are-data-sources-used-in-terraform' },
  // Add more terms with their descriptions and references
];

router.get('/', (req, res) => {
  res.render('index', { glossaryData });
});

module.exports = router;
